#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RESTLoja.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SiPA")]
	public partial class LojaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFuncionario(Funcionario instance);
    partial void UpdateFuncionario(Funcionario instance);
    partial void DeleteFuncionario(Funcionario instance);
    partial void InsertPagamento(Pagamento instance);
    partial void UpdatePagamento(Pagamento instance);
    partial void DeletePagamento(Pagamento instance);
    #endregion
		
		public LojaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiPAConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LojaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LojaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LojaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LojaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Funcionario> Funcionarios
		{
			get
			{
				return this.GetTable<Funcionario>();
			}
		}
		
		public System.Data.Linq.Table<Pagamento> Pagamentos
		{
			get
			{
				return this.GetTable<Pagamento>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Funcionario")]
	public partial class Funcionario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nome;
		
		private string _telefone;
		
		private string _identidade;
		
		private string _ct;
		
		private System.Nullable<double> _salario;
		
		private System.Nullable<bool> _motorista;
		
		private System.Nullable<bool> _tecnico;
		
		private string _observacao;
		
		private EntitySet<Pagamento> _Pagamentos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OntelefoneChanging(string value);
    partial void OntelefoneChanged();
    partial void OnidentidadeChanging(string value);
    partial void OnidentidadeChanged();
    partial void OnctChanging(string value);
    partial void OnctChanged();
    partial void OnsalarioChanging(System.Nullable<double> value);
    partial void OnsalarioChanged();
    partial void OnmotoristaChanging(System.Nullable<bool> value);
    partial void OnmotoristaChanged();
    partial void OntecnicoChanging(System.Nullable<bool> value);
    partial void OntecnicoChanged();
    partial void OnobservacaoChanging(string value);
    partial void OnobservacaoChanged();
    #endregion
		
		public Funcionario()
		{
			this._Pagamentos = new EntitySet<Pagamento>(new Action<Pagamento>(this.attach_Pagamentos), new Action<Pagamento>(this.detach_Pagamentos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(MAX)")]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefone", DbType="VarChar(MAX)")]
		public string telefone
		{
			get
			{
				return this._telefone;
			}
			set
			{
				if ((this._telefone != value))
				{
					this.OntelefoneChanging(value);
					this.SendPropertyChanging();
					this._telefone = value;
					this.SendPropertyChanged("telefone");
					this.OntelefoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identidade", DbType="VarChar(MAX)")]
		public string identidade
		{
			get
			{
				return this._identidade;
			}
			set
			{
				if ((this._identidade != value))
				{
					this.OnidentidadeChanging(value);
					this.SendPropertyChanging();
					this._identidade = value;
					this.SendPropertyChanged("identidade");
					this.OnidentidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ct", DbType="VarChar(MAX)")]
		public string ct
		{
			get
			{
				return this._ct;
			}
			set
			{
				if ((this._ct != value))
				{
					this.OnctChanging(value);
					this.SendPropertyChanging();
					this._ct = value;
					this.SendPropertyChanged("ct");
					this.OnctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salario", DbType="Float")]
		public System.Nullable<double> salario
		{
			get
			{
				return this._salario;
			}
			set
			{
				if ((this._salario != value))
				{
					this.OnsalarioChanging(value);
					this.SendPropertyChanging();
					this._salario = value;
					this.SendPropertyChanged("salario");
					this.OnsalarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_motorista", DbType="Bit")]
		public System.Nullable<bool> motorista
		{
			get
			{
				return this._motorista;
			}
			set
			{
				if ((this._motorista != value))
				{
					this.OnmotoristaChanging(value);
					this.SendPropertyChanging();
					this._motorista = value;
					this.SendPropertyChanged("motorista");
					this.OnmotoristaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tecnico", DbType="Bit")]
		public System.Nullable<bool> tecnico
		{
			get
			{
				return this._tecnico;
			}
			set
			{
				if ((this._tecnico != value))
				{
					this.OntecnicoChanging(value);
					this.SendPropertyChanging();
					this._tecnico = value;
					this.SendPropertyChanged("tecnico");
					this.OntecnicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_observacao", DbType="VarChar(MAX)")]
		public string observacao
		{
			get
			{
				return this._observacao;
			}
			set
			{
				if ((this._observacao != value))
				{
					this.OnobservacaoChanging(value);
					this.SendPropertyChanging();
					this._observacao = value;
					this.SendPropertyChanged("observacao");
					this.OnobservacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Pagamento", Storage="_Pagamentos", ThisKey="id", OtherKey="funcionario_id")]
		public EntitySet<Pagamento> Pagamentos
		{
			get
			{
				return this._Pagamentos;
			}
			set
			{
				this._Pagamentos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pagamentos(Pagamento entity)
		{
			this.SendPropertyChanging();
			entity.Funcionario = this;
		}
		
		private void detach_Pagamentos(Pagamento entity)
		{
			this.SendPropertyChanging();
			entity.Funcionario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pagamento")]
	public partial class Pagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _funcionario_id;
		
		private System.Nullable<System.DateTime> _dataPagamento;
		
		private System.Nullable<int> _mesReferente;
		
		private System.Nullable<int> _anoReferente;
		
		private string _valorPago;
		
		private EntityRef<Funcionario> _Funcionario;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfuncionario_idChanging(System.Nullable<int> value);
    partial void Onfuncionario_idChanged();
    partial void OndataPagamentoChanging(System.Nullable<System.DateTime> value);
    partial void OndataPagamentoChanged();
    partial void OnmesReferenteChanging(System.Nullable<int> value);
    partial void OnmesReferenteChanged();
    partial void OnanoReferenteChanging(System.Nullable<int> value);
    partial void OnanoReferenteChanged();
    partial void OnvalorPagoChanging(string value);
    partial void OnvalorPagoChanged();
    #endregion
		
		public Pagamento()
		{
			this._Funcionario = default(EntityRef<Funcionario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funcionario_id", DbType="Int")]
		public System.Nullable<int> funcionario_id
		{
			get
			{
				return this._funcionario_id;
			}
			set
			{
				if ((this._funcionario_id != value))
				{
					if (this._Funcionario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfuncionario_idChanging(value);
					this.SendPropertyChanging();
					this._funcionario_id = value;
					this.SendPropertyChanged("funcionario_id");
					this.Onfuncionario_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataPagamento", DbType="Date")]
		public System.Nullable<System.DateTime> dataPagamento
		{
			get
			{
				return this._dataPagamento;
			}
			set
			{
				if ((this._dataPagamento != value))
				{
					this.OndataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._dataPagamento = value;
					this.SendPropertyChanged("dataPagamento");
					this.OndataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mesReferente", DbType="Int")]
		public System.Nullable<int> mesReferente
		{
			get
			{
				return this._mesReferente;
			}
			set
			{
				if ((this._mesReferente != value))
				{
					this.OnmesReferenteChanging(value);
					this.SendPropertyChanging();
					this._mesReferente = value;
					this.SendPropertyChanged("mesReferente");
					this.OnmesReferenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anoReferente", DbType="Int")]
		public System.Nullable<int> anoReferente
		{
			get
			{
				return this._anoReferente;
			}
			set
			{
				if ((this._anoReferente != value))
				{
					this.OnanoReferenteChanging(value);
					this.SendPropertyChanging();
					this._anoReferente = value;
					this.SendPropertyChanged("anoReferente");
					this.OnanoReferenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valorPago", DbType="NChar(10)")]
		public string valorPago
		{
			get
			{
				return this._valorPago;
			}
			set
			{
				if ((this._valorPago != value))
				{
					this.OnvalorPagoChanging(value);
					this.SendPropertyChanging();
					this._valorPago = value;
					this.SendPropertyChanged("valorPago");
					this.OnvalorPagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Funcionario_Pagamento", Storage="_Funcionario", ThisKey="funcionario_id", OtherKey="id", IsForeignKey=true)]
		public Funcionario Funcionario
		{
			get
			{
				return this._Funcionario.Entity;
			}
			set
			{
				Funcionario previousValue = this._Funcionario.Entity;
				if (((previousValue != value) 
							|| (this._Funcionario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Funcionario.Entity = null;
						previousValue.Pagamentos.Remove(this);
					}
					this._Funcionario.Entity = value;
					if ((value != null))
					{
						value.Pagamentos.Add(this);
						this._funcionario_id = value.id;
					}
					else
					{
						this._funcionario_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Funcionario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
